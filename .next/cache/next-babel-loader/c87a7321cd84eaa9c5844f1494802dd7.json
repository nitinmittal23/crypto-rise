{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestsCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    return {\n      address,\n      requests,\n      requestCount,\n      approversCount\n    };\n  }\n\n  renderRows() {\n    return this.props.requests.map((request, index) => {\n      return /*#__PURE__*/_jsx(RequestRow, {\n        id: index,\n        request: request,\n        address: this.props.address,\n        approversCount: this.props.approversCount\n      }, index);\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"Requests\"\n      }), /*#__PURE__*/_jsx(Link, {\n        route: `/campaigns/${this.props.address}/requests/new`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            primary: true,\n            floated: \"right\",\n            style: {\n              marginBottom: 10\n            },\n            children: \"Add Request\"\n          })\n        })\n      }), /*#__PURE__*/_jsxs(Table, {\n        children: [/*#__PURE__*/_jsx(Header, {\n          children: /*#__PURE__*/_jsxs(Row, {\n            children: [/*#__PURE__*/_jsx(HeaderCell, {\n              children: \"ID\"\n            }), /*#__PURE__*/_jsx(HeaderCell, {\n              children: \"Description\"\n            }), /*#__PURE__*/_jsx(HeaderCell, {\n              children: \"Amount\"\n            }), /*#__PURE__*/_jsx(HeaderCell, {\n              children: \"Recipient\"\n            }), /*#__PURE__*/_jsx(HeaderCell, {\n              children: \"Approval Count\"\n            }), /*#__PURE__*/_jsx(HeaderCell, {\n              children: \"Approve\"\n            }), /*#__PURE__*/_jsx(HeaderCell, {\n              children: \"Finalize\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Body, {\n          children: this.renderRows()\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Found \", this.props.requestCount, \" requests.\"]\n      })]\n    });\n  }\n\n}\n\nexport default RequestIndex;","map":{"version":3,"sources":["/Users/nitinmittal/Desktop/crypto-rise/pages/campaigns/requests/index.js"],"names":["React","Component","Button","Table","Link","Layout","Campaign","RequestRow","RequestIndex","getInitialProps","props","address","query","campaign","requestCount","methods","getRequestsCount","call","approversCount","requests","Promise","all","Array","parseInt","fill","map","element","index","renderRows","request","render","Header","Row","HeaderCell","Body","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACnC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AACA,UAAMC,QAAQ,GAAGP,QAAQ,CAACK,OAAD,CAAzB;AACA,UAAMG,YAAY,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,gBAAjB,GAAoCC,IAApC,EAA3B;AACA,UAAMC,cAAc,GAAG,MAAML,QAAQ,CAACE,OAAT,CAAiBG,cAAjB,GAAkCD,IAAlC,EAA7B;AAEA,UAAME,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACT,YAAD,CAAT,CAAL,CACGU,IADH,GAEGC,GAFH,CAEO,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aAAOd,QAAQ,CAACE,OAAT,CAAiBI,QAAjB,CAA0BQ,KAA1B,EAAiCV,IAAjC,EAAP;AACD,KAJH,CADqB,CAAvB;AAQA,WAAO;AAAEN,MAAAA,OAAF;AAAWQ,MAAAA,QAAX;AAAqBL,MAAAA,YAArB;AAAmCI,MAAAA;AAAnC,KAAP;AACD;;AAEDU,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKlB,KAAL,CAAWS,QAAX,CAAoBM,GAApB,CAAwB,CAACI,OAAD,EAAUF,KAAV,KAAoB;AACjD,0BACE,KAAC,UAAD;AAEE,QAAA,EAAE,EAAEA,KAFN;AAGE,QAAA,OAAO,EAAEE,OAHX;AAIE,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWC,OAJtB;AAKE,QAAA,cAAc,EAAE,KAAKD,KAAL,CAAWQ;AAL7B,SACOS,KADP,CADF;AASD,KAVM,CAAP;AAWD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,GAAV;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAoC/B,KAA1C;AAEA,wBACE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,eAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAG,cAAa,KAAKO,KAAL,CAAWC,OAAQ,eAA9C;AAAA,+BACE;AAAA,iCACE,KAAC,MAAD;AAAQ,YAAA,OAAO,MAAf;AAAgB,YAAA,OAAO,EAAC,OAAxB;AAAgC,YAAA,KAAK,EAAE;AAAEwB,cAAAA,YAAY,EAAE;AAAhB,aAAvC;AAAA;AAAA;AADF;AADF,QAFF,eASE,MAAC,KAAD;AAAA,gCACE,KAAC,MAAD;AAAA,iCACE,MAAC,GAAD;AAAA,oCACE,KAAC,UAAD;AAAA;AAAA,cADF,eAEE,KAAC,UAAD;AAAA;AAAA,cAFF,eAGE,KAAC,UAAD;AAAA;AAAA,cAHF,eAIE,KAAC,UAAD;AAAA;AAAA,cAJF,eAKE,KAAC,UAAD;AAAA;AAAA,cALF,eAME,KAAC,UAAD;AAAA;AAAA,cANF,eAOE,KAAC,UAAD;AAAA;AAAA,cAPF;AAAA;AADF,UADF,eAYE,KAAC,IAAD;AAAA,oBAAO,KAAKP,UAAL;AAAP,UAZF;AAAA,QATF,eAuBE;AAAA,6BAAY,KAAKlB,KAAL,CAAWI,YAAvB;AAAA,QAvBF;AAAA,MADF;AA2BD;;AA9DkC;;AAiErC,eAAeN,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const { address } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestsCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n\n    const requests = await Promise.all(\n      Array(parseInt(requestCount))\n        .fill()\n        .map((element, index) => {\n          return campaign.methods.requests(index).call();\n        })\n    );\n\n    return { address, requests, requestCount, approversCount };\n  }\n\n  renderRows() {\n    return this.props.requests.map((request, index) => {\n      return (\n        <RequestRow\n          key={index}\n          id={index}\n          request={request}\n          address={this.props.address}\n          approversCount={this.props.approversCount}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { Header, Row, HeaderCell, Body } = Table;\n\n    return (\n      <Layout>\n        <h3>Requests</h3>\n        <Link route={`/campaigns/${this.props.address}/requests/new`}>\n          <a>\n            <Button primary floated=\"right\" style={{ marginBottom: 10 }}>\n              Add Request\n            </Button>\n          </a>\n        </Link>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>ID</HeaderCell>\n              <HeaderCell>Description</HeaderCell>\n              <HeaderCell>Amount</HeaderCell>\n              <HeaderCell>Recipient</HeaderCell>\n              <HeaderCell>Approval Count</HeaderCell>\n              <HeaderCell>Approve</HeaderCell>\n              <HeaderCell>Finalize</HeaderCell>\n            </Row>\n          </Header>\n          <Body>{this.renderRows()}</Body>\n        </Table>\n        <div>Found {this.props.requestCount} requests.</div>\n      </Layout>\n    );\n  }\n}\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}